# 순차탐색 
# 1. 이름처럼 순차로 데이터를 탐색한다는 의미
# 2. 리스트의 데이터에 하나씩 방문하며 특정한 문자열과 같은지 검사 
# 3. 리스트에 특정 값의 원소가 있는지 체크할 때 주로 사용됨 
# 4. 리스트 자료형에서 count() 메서드를 이용할 때도 내부적으로는 순차 탐색 수행됨 
# 5. 순차 탐색은 데이터 정렬 여부와 상관 없이 가장 앞에 있는 원소부터 하나씩 확인해야 한다는 점이 특징
# 6. 따라서 데이터의 개수가 N개일 때 최대 N번의 비교 연산이 필요하므로 최악의 경우 O(N)의 시간복잡도 

# 순차탐색 소스코드 구현 
def sequential_search(n,target,array):
    # 각 원소를 하나씩 확인
    for i in range(n):
        # 현재 원소가 찾는 원소랑 동일한 경우
        if array[i] == target:
            return i + 1 # 현재의 위치 반환(인덱스는 0부터 시작하므로 1 더하기)

print('생성할 원소 개수를 입력한 다음 한 칸 띄고 찾을 문자열을 입력하세요')
input_data = input().split()
n = int(input_data[0]) # 원소의 개수
target = input_data[1] # 찾고자 하는 문자열 

print("앞에서 적은 원소 개수만큼 문자열을 입력하세요. 구분은 띄어쓰기 한 칸")
array = input().split()

# 순차 탐색 수행 결과 출력 
print(sequential_search(n,target,array))
